// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_starter/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_starter/core/error/failure.dart' as _i6;
import 'package:flutter_starter/core/impl/result_response.dart' as _i2;
import 'package:flutter_starter/data/data_sources/remote_data_source.dart'
    as _i7;
import 'package:flutter_starter/data/models/weather_model.dart' as _i5;
import 'package:flutter_starter/data/repositories/weather_repository.dart'
    as _i3;
import 'package:flutter_starter/domain/entities/weather.dart' as _i9;
import 'package:flutter_starter/domain/usecases/get_current_weather.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResultResponse_0<TData, TError> extends _i1.SmartFake
    implements _i2.ResultResponse<TData, TError> {
  _FakeResultResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWeatherRepository_1 extends _i1.SmartFake
    implements _i3.WeatherRepository {
  _FakeWeatherRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i3.WeatherRepository {
  MockWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
      _i2.ResultResponse<_i5.WeatherModel, _i6.Failure>> getCurrentWeather(
          String? cityName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentWeather,
          [cityName],
        ),
        returnValue:
            _i4.Future<_i2.ResultResponse<_i5.WeatherModel, _i6.Failure>>.value(
                _FakeResultResponse_0<_i5.WeatherModel, _i6.Failure>(
          this,
          Invocation.method(
            #getCurrentWeather,
            [cityName],
          ),
        )),
      ) as _i4.Future<_i2.ResultResponse<_i5.WeatherModel, _i6.Failure>>);
}

/// A class which mocks [WeatherRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRemoteDataSource extends _i1.Mock
    implements _i7.WeatherRemoteDataSource {
  MockWeatherRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
      _i2.ResultResponse<_i5.WeatherModel, _i6.Failure>> getCurrentWeather(
          String? cityName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentWeather,
          [cityName],
        ),
        returnValue:
            _i4.Future<_i2.ResultResponse<_i5.WeatherModel, _i6.Failure>>.value(
                _FakeResultResponse_0<_i5.WeatherModel, _i6.Failure>(
          this,
          Invocation.method(
            #getCurrentWeather,
            [cityName],
          ),
        )),
      ) as _i4.Future<_i2.ResultResponse<_i5.WeatherModel, _i6.Failure>>);
}

/// A class which mocks [GetCurrentWeatherUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCurrentWeatherUseCase extends _i1.Mock
    implements _i8.GetCurrentWeatherUseCase {
  MockGetCurrentWeatherUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.WeatherRepository get weatherRepository => (super.noSuchMethod(
        Invocation.getter(#weatherRepository),
        returnValue: _FakeWeatherRepository_1(
          this,
          Invocation.getter(#weatherRepository),
        ),
      ) as _i3.WeatherRepository);

  @override
  _i4.Future<_i2.ResultResponse<_i9.WeatherEntity, _i6.Failure>> execute(
          String? cityName) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [cityName],
        ),
        returnValue: _i4
            .Future<_i2.ResultResponse<_i9.WeatherEntity, _i6.Failure>>.value(
            _FakeResultResponse_0<_i9.WeatherEntity, _i6.Failure>(
          this,
          Invocation.method(
            #execute,
            [cityName],
          ),
        )),
      ) as _i4.Future<_i2.ResultResponse<_i9.WeatherEntity, _i6.Failure>>);
}
